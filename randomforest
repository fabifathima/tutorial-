import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load dataset
data_path = "Advertising.csv"
data = pd.read_csv(data_path)

# Feature selection
features = data[['TV', 'radio', 'newspaper']].values
target = data['sales'].values

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=0)

# Number of random forest models to ensemble manually
ensemble_size = 7
individual_trees = 8  # Number of trees per model

# Train multiple random forest models with different seeds and average predictions
all_preds = np.array([
    RandomForestRegressor(n_estimators=individual_trees, random_state=seed)
    .fit(X_train, y_train)
    .predict(X_test)
    for seed in range(ensemble_size)
])

# Average predictions from all models
ensemble_prediction = np.mean(all_preds, axis=0)

# Evaluate model
mse_score = mean_squared_error(y_test, ensemble_prediction)
print(f"Ensemble Mean Squared Error: {mse_score:.4f}")
