import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# New sample dataset
data = {
    'Study Hours': [5, 3, 6, 4, 2, 7, 3.5, 6.5, 4.5, 2.5],
    'Class Participation': [80, 60, 90, 75, 50, 85, 65, 95, 70, 55],
    'Pass/Fail (0 or 1)': [1, 0, 1, 1, 0, 1, 0, 1, 1, 0]
}

# Convert data into numpy arrays
X_data = np.array(list(zip(data['Study Hours'], data['Class Participation'])))
y_data = np.array(data['Pass/Fail (0 or 1)'])

# Split data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=24)

# Initialize and train the logistic regression model
classifier = LogisticRegression()
classifier.fit(X_train, y_train)

# Make predictions on the test set
y_predicted = classifier.predict(X_test)

# Calculate and display the model's accuracy
model_accuracy = accuracy_score(y_test, y_predicted)
print(f"Model Accuracy: {model_accuracy:.2f}")

# Predict for unknown inputs (new student data)
new_students = np.array([[5.5, 78], [3, 65]])  # New data points for prediction
predictions = classifier.predict(new_students)

print("Predictions for new students:")
for i, prediction in enumerate(predictions):
    result = "Pass" if prediction == 1 else "Fail"
    print(f"Student {i+1}: {result}")
